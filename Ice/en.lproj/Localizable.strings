"Ice Bar" = "Ice Bar";
"init(coder:) has not been implemented" = "init(coder:) has not been implemented";
"init(rootView:) has not been implemented" = "init(rootView:) has not been implemented";
"The Ice Bar requires screen recording permissions." = "The Ice Bar requires screen recording permissions.";
"Open Ice Settings" = "Open Ice Settings";
"Ice cannot display menu bar items for automatically hidden menu bars" = "Ice cannot display menu bar items for automatically hidden menu bars";
"Unable to display menu bar items" = "Unable to display menu bar items";
"left click" = "left click";
"right click" = "right click";
"Dynamic" = "Dynamic";
"Mouse pointer" = "Mouse pointer";
"Ice icon" = "Ice icon";
"Hotkey is reserved by macOS" = "Hotkey is reserved by macOS";
"OK" = "OK";
"Type Hotkey" = "Type Hotkey";
"ERROR" = "ERROR";
"Record Hotkey" = "Record Hotkey";
"escape" = "escape";
"xmark.circle.fill" = "xmark.circle.fill";
"record.circle" = "record.circle";
"No action assigned to menu item" = "No action assigned to menu item";
"IceMenu" = "IceMenu";
"chevron.\(kind.rawValue)" = "chevron.\(kind.rawValue)";
"BETA" = "BETA";
"Menu bar item is not movable." = "Menu bar item is not movable.";
"macOS prohibits \"\(item.displayName)\" from being moved." = "macOS prohibits \"\(item.displayName)\" from being moved.";
"\(item.displayName) is unresponsive. Until it is restarted, it cannot be moved. Movement of other menu bar items may also be affected until this is resolved." = "\(item.displayName) is unresponsive. Until it is restarted, it cannot be moved. Movement of other menu bar items may also be affected until this is resolved.";
"\(Constants.bundleIdentifier).layout-bar-item" = "\(Constants.bundleIdentifier).layout-bar-item";
"No target item for layout bar drag" = "No target item for layout bar drag";
"Error moving menu bar item: \(error)" = "Error moving menu bar item: \(error)";
"LayoutBar" = "LayoutBar";
"Ice" = "Ice";
"gearshape" = "gearshape";
"rectangle.topthird.inset.filled" = "rectangle.topthird.inset.filled";
"swatchpalette" = "swatchpalette";
"keyboard" = "keyboard";
"gearshape.2" = "gearshape.2";
"arrow.triangle.2.circlepath.circle" = "arrow.triangle.2.circlepath.circle";
" second" = " second";
" seconds" = " seconds";
"Permissions" = "Permissions";
"Hide application menus when showing menu bar items" = "Hide application menus when showing menu bar items";
"Make more room in the menu bar by hiding the left application menus if needed" = "Make more room in the menu bar by hiding the left application menus if needed";
"Show section dividers" = "Show section dividers";
"Insert divider items" = "Insert divider items";
"(" = "(";
")" = ")";
"between sections" = "between sections";
"Enable always-hidden section" = "Enable always-hidden section";
"Always-hidden section can be shown" = "Always-hidden section can be shown";
"Option + click one of Ice's menu bar items, or inside an empty area of the menu bar to show the section" = "Option + click one of Ice's menu bar items, or inside an empty area of the menu bar to show the section";
"Option + click one of Ice's menu bar items to show the section" = "Option + click one of Ice's menu bar items to show the section";
"Show on hover delay" = "Show on hover delay";
"The amount of time to wait before showing on hover" = "The amount of time to wait before showing on hover";
"Temporarily shown item delay" = "Temporarily shown item delay";
"The amount of time to wait before hiding temporarily shown menu bar items" = "The amount of time to wait before hiding temporarily shown menu bar items";
"Show all sections when Command + dragging menu bar items" = "Show all sections when Command + dragging menu bar items";
"Permission Granted" = "Permission Granted";
"checkmark.circle" = "checkmark.circle";
"Grant Permission" = "Grant Permission";
"Drag to arrange your menu bar items" = "Drag to arrange your menu bar items";
"Tip: you can also arrange menu bar items by Command + dragging them in the menu bar" = "Tip: you can also arrange menu bar items by Command + dragging them in the menu bar";
"lightbulb" = "lightbulb";
"Ice cannot arrange menu bar items in automatically hidden menu bars" = "Ice cannot arrange menu bar items in automatically hidden menu bars";
"Menu bar layout requires screen recording permissions" = "Menu bar layout requires screen recording permissions";
"Go to Advanced Settings" = "Go to Advanced Settings";
"\(section.name.displayString) Section" = "\(section.name.displayString) Section";
"Menu Bar Sections" = "Menu Bar Sections";
"Menu Bar Items" = "Menu Bar Items";
"Other" = "Other";
"Toggle the hidden section" = "Toggle the hidden section";
"Toggle the always-hidden section" = "Toggle the always-hidden section";
"Search menu bar items" = "Search menu bar items";
"Enable the Ice Bar" = "Enable the Ice Bar";
"Toggle application menus" = "Toggle application menus";
"Acknowledgements" = "Acknowledgements";
"pdf" = "pdf";
"https://github.com/jordanbaird/Ice" = "https://github.com/jordanbaird/Ice";
"issues" = "issues";
"https://icemenubar.app/Donate" = "https://icemenubar.app/Donate";
"Version" = "Version";
"Quit Ice" = "Quit Ice";
"Contribute" = "Contribute";
"Report a Bug" = "Report a Bug";
"Support Ice" = "Support Ice";
"heart.circle.fill" = "heart.circle.fill";
"none" = "none";
"default" = "default";
"max" = "max";
"Show Ice icon" = "Show Ice icon";
"You can still access Ice's settings by right-clicking an empty area in the menu bar" = "You can still access Ice's settings by right-clicking an empty area in the menu bar";
"Choose image…" = "Choose image…";
"Choose a custom icon to show in the menu bar" = "Choose a custom icon to show in the menu bar";
"Apply system theme to icon" = "Apply system theme to icon";
"Display the icon as a monochrome image matching the system appearance" = "Display the icon as a monochrome image matching the system appearance";
"Use Ice Bar" = "Use Ice Bar";
"Show hidden menu bar items in a separate bar below the menu bar" = "Show hidden menu bar items in a separate bar below the menu bar";
"Location" = "Location";
"The Ice Bar's location changes based on context" = "The Ice Bar's location changes based on context";
"The Ice Bar is centered below the mouse pointer" = "The Ice Bar is centered below the mouse pointer";
"The Ice Bar is centered below the Ice icon" = "The Ice Bar is centered below the Ice icon";
"Show on click" = "Show on click";
"Click inside an empty area of the menu bar to show hidden menu bar items" = "Click inside an empty area of the menu bar to show hidden menu bar items";
"Show on hover" = "Show on hover";
"Hover over an empty area of the menu bar to show hidden menu bar items" = "Hover over an empty area of the menu bar to show hidden menu bar items";
"Show on scroll" = "Show on scroll";
"Scroll or swipe in the menu bar to toggle hidden menu bar items" = "Scroll or swipe in the menu bar to toggle hidden menu bar items";
"Apply" = "Apply";
"Apply the current spacing" = "Apply the current spacing";
"arrow.counterclockwise.circle.fill" = "arrow.counterclockwise.circle.fill";
"Reset to the default spacing" = "Reset to the default spacing";
"Menu bar item spacing" = "Menu bar item spacing";
"Applying this setting will relaunch all apps with menu bar items. Some apps may need to be manually relaunched." = "Applying this setting will relaunch all apps with menu bar items. Some apps may need to be manually relaunched.";
"Note: You may need to log out and back in for this setting to apply properly." = "Note: You may need to log out and back in for this setting to apply properly.";
"exclamationmark.circle" = "exclamationmark.circle";
"Strategy" = "Strategy";
"Menu bar items are rehidden using a smart algorithm" = "Menu bar items are rehidden using a smart algorithm";
"Menu bar items are rehidden after a fixed amount of time" = "Menu bar items are rehidden after a fixed amount of time";
"Menu bar items are rehidden when the focused app changes" = "Menu bar items are rehidden when the focused app changes";
"Automatically rehide" = "Automatically rehide";
"Never" = "Never";
"Automatically check for updates" = "Automatically check for updates";
"Automatically download updates" = "Automatically download updates";
"Check for Updates…" = "Check for Updates…";
"Last checked:" = "Last checked:";
"Error decoding hotkey: \(error)" = "Error decoding hotkey: \(error)";
"Error encoding hotkey: \(error)" = "Error encoding hotkey: \(error)";
"HotkeySettingsManager" = "HotkeySettingsManager";
"Error decoding Ice icon: \(error)" = "Error decoding Ice icon: \(error)";
"Error encoding Ice icon: \(error)" = "Error encoding Ice icon: \(error)";
"GeneralSettingsManager" = "GeneralSettingsManager";
"Sections already initialized" = "Sections already initialized";
"Error initializing menu bar sections: Missing app state" = "Error initializing menu bar sections: Missing app state";
"_HIHideMenuBar" = "_HIHideMenuBar";
"HideApplicationMenus" = "HideApplicationMenus";
"Edit Menu Bar Appearance…" = "Edit Menu Bar Appearance…";
"Ice Settings…" = "Ice Settings…";
"," = ",";
"Error hiding application menus: Missing app state" = "Error hiding application menus: Missing app state";
"Hiding application menus" = "Hiding application menus";
"Error showing application menus: Missing app state" = "Error showing application menus: Missing app state";
"Showing application menus" = "Showing application menus";
"Error showing appearance editor popover: Missing app state" = "Error showing appearance editor popover: Missing app state";
"MenuBarManager" = "MenuBarManager";
"Visible" = "Visible";
"Hidden" = "Hidden";
"Always-Hidden" = "Always-Hidden";
"visible section" = "visible section";
"hidden section" = "hidden section";
"always-hidden section" = "always-hidden section";
"MenuBarSection" = "MenuBarSection";
"Error decoding configuration: \(error)" = "Error decoding configuration: \(error)";
"Error encoding configuration: \(error)" = "Error encoding configuration: \(error)";
"MenuBarAppearanceManager" = "MenuBarAppearanceManager";
"None" = "None";
"Solid" = "Solid";
"Gradient" = "Gradient";
"Menu Bar Overlay" = "Menu Bar Overlay";
"Preventing overlay panel from showing." = "Preventing overlay panel from showing.";
"Preventing overlay panel from updating." = "Preventing overlay panel from updating.";
"No app state. \(actionMessage)" = "No app state. \(actionMessage)";
"Menu bar is hidden by system. \(actionMessage)" = "Menu bar is hidden by system. \(actionMessage)";
"Active space is fullscreen. \(actionMessage)" = "Active space is fullscreen. \(actionMessage)";
"No valid menu bar found. \(actionMessage)" = "No valid menu bar found. \(actionMessage)";
"Overlay panel \(self) not retained" = "Overlay panel \(self) not retained";
"ShowSectionDividers" = "ShowSectionDividers";
"inside" = "inside";
"MenuBarOverlayPanel" = "MenuBarOverlayPanel";
"Shape Kind" = "Shape Kind";
"Full" = "Full";
"Split" = "Split";
"No shape kind selected" = "No shape kind selected";
"Square Cap" = "Square Cap";
"Round Cap" = "Round Cap";
"Leading End Cap" = "Leading End Cap";
"Trailing End Cap" = "Trailing End Cap";
"Menu Bar Appearance" = "Menu Bar Appearance";
"Done" = "Done";
"Menu Bar Shape" = "Menu Bar Shape";
"Tip: you can also edit these settings by right-clicking in an empty area of the menu bar" = "Tip: you can also edit these settings by right-clicking in an empty area of the menu bar";
"Reset" = "Reset";
"Use dynamic appearance" = "Use dynamic appearance";
"Apply different settings based on the current system appearance" = "Apply different settings based on the current system appearance";
"Ice cannot edit the appearance of automatically hidden menu bars" = "Ice cannot edit the appearance of automatically hidden menu bars";
"Use inset shape on screens with notch" = "Use inset shape on screens with notch";
"Tint" = "Tint";
"Shadow" = "Shadow";
"Border" = "Border";
"Border Color" = "Border Color";
"Border Width" = "Border Width";
"1" = "1";
"2" = "2";
"3" = "3";
"Hold to Preview" = "Hold to Preview";
"Search menu bar items…" = "Search menu bar items…";
"Click item" = "Click item";
"Show item" = "Show item";
"return" = "return";
"com.apple.controlcenter" = "com.apple.controlcenter";
"NSStatusItemSpacing" = "NSStatusItemSpacing";
"NSStatusItemSelectionPadding" = "NSStatusItemSelectionPadding";
"The following applications failed to quit and were not restarted:\n" = "The following applications failed to quit and were not restarted:\n";
"\n" = "\n";
"You may need to log out for the changes to take effect." = "You may need to log out for the changes to take effect.";
"/usr/bin/env" = "/usr/bin/env";
"defaults" = "defaults";
"-currentHost" = "-currentHost";
"delete" = "delete";
"-globalDomain" = "-globalDomain";
"write" = "write";
"-int" = "-int";
"<NIL>" = "<NIL>";
"Application \"\(logString(for: app))\" is already terminated" = "Application \"\(logString(for: app))\" is already terminated";
"Signaling application \"\(logString(for: app))\" to quit" = "Signaling application \"\(logString(for: app))\" to quit";
"Application \"\(logString(for: app))\" did not terminate within \(forceTerminateDelay) seconds, attempting to force terminate" = "Application \"\(logString(for: app))\" did not terminate within \(forceTerminateDelay) seconds, attempting to force terminate";
"Application \"\(logString(for: app))\" terminated successfully" = "Application \"\(logString(for: app))\" terminated successfully";
"Application \"\(logString(for: app))\" is already open, so skipping launch" = "Application \"\(logString(for: app))\" is already open, so skipping launch";
"com.apple.Spotlight" = "com.apple.Spotlight";
"Spacing" = "Spacing";
"Unknown" = "Unknown";
"AccessibilityShortcuts" = "AccessibilityShortcuts";
"Accessibility Shortcuts" = "Accessibility Shortcuts";
"BentoBox" = "BentoBox";
"FocusModes" = "FocusModes";
"Focus" = "Focus";
"KeyboardBrightness" = "KeyboardBrightness";
"Keyboard Brightness" = "Keyboard Brightness";
"MusicRecognition" = "MusicRecognition";
"Music Recognition" = "Music Recognition";
"NowPlaying" = "NowPlaying";
"Now Playing" = "Now Playing";
"ScreenMirroring" = "ScreenMirroring";
"Screen Mirroring" = "Screen Mirroring";
"StageManager" = "StageManager";
"Stage Manager" = "Stage Manager";
"UserSwitcher" = "UserSwitcher";
"Fast User Switching" = "Fast User Switching";
"WiFi" = "WiFi";
"Wi-Fi" = "Wi-Fi";
"TimeMachine.TMMenuExtraHost" = "TimeMachine.TMMenuExtraHost";
"TimeMachineMenuExtra.TMMenuExtraHost" = "TimeMachineMenuExtra.TMMenuExtraHost";
"Time Machine" = "Time Machine";
"com.apple.Passwords.MenuBarExtra" = "com.apple.Passwords.MenuBarExtra";
"Passwords" = "Passwords";
"\(item.logString) was not cached" = "\(item.logString) was not cached";
"Skipping menu bar item cache as \(reason)" = "Skipping menu bar item cache as \(reason)";
"Caching menu bar items" = "Caching menu bar items";
"an item is currently being moved" = "an item is currently being moved";
"an item was recently moved" = "an item was recently moved";
"item windows have not changed" = "item windows have not changed";
"Missing control item for hidden section" = "Missing control item for hidden section";
"Clearing menu bar item cache" = "Clearing menu bar item cache";
"Error enforcing control item order: \(error)" = "Error enforcing control item order: \(error)";
"couldNotComplete" = "couldNotComplete";
"eventCreationFailure" = "eventCreationFailure";
"invalidAppState" = "invalidAppState";
"invalidEventSource" = "invalidEventSource";
"invalidCursorLocation" = "invalidCursorLocation";
"invalidItem" = "invalidItem";
"notMovable" = "notMovable";
"eventOperationTimeout" = "eventOperationTimeout";
"frameCheckTimeout" = "frameCheckTimeout";
"otherTimeout" = "otherTimeout";
"\(self) (rawValue: \(rawValue))" = "\(self) (rawValue: \(rawValue))";
"Could not complete event operation for \"\(item.displayName)\"" = "Could not complete event operation for \"\(item.displayName)\"";
"Failed to create event for \"\(item.displayName)\"" = "Failed to create event for \"\(item.displayName)\"";
"Invalid app state for \"\(item.displayName)\"" = "Invalid app state for \"\(item.displayName)\"";
"Invalid event source for \"\(item.displayName)\"" = "Invalid event source for \"\(item.displayName)\"";
"Invalid cursor location for \"\(item.displayName)\"" = "Invalid cursor location for \"\(item.displayName)\"";
"Event operation timed out for \"\(item.displayName)\"" = "Event operation timed out for \"\(item.displayName)\"";
"Frame check timed out for \"\(item.displayName)\"" = "Frame check timed out for \"\(item.displayName)\"";
"Operation timed out for \"\(item.displayName)\"" = "Operation timed out for \"\(item.displayName)\"";
"code: \(code.logString)" = "code: \(code.logString)";
"item: \(item.logString)" = "item: \(item.logString)";
"\(Self.self)(\(parameters.joined(separator: " = "\(Self.self)(\(parameters.joined(separator: ";
")))" = ")))";
"Please try again. If the error persists, please file a bug report." = "Please try again. If the error persists, please file a bug report.";
"left of \(item.logString)" = "left of \(item.logString)";
"right of \(item.logString)" = "right of \(item.logString)";
"Couldn't get current frame for \(item.logString)" = "Couldn't get current frame for \(item.logString)";
"Posting \(event.type.logString) to \(location.logString)" = "Posting \(event.type.logString) to \(location.logString)";
"Event tap \"\(proxy.label)\" is disabled (item: \(item.logString))" = "Event tap \"\(proxy.label)\" is disabled (item: \(item.logString))";
"Received \(type.logString) at \(location.logString) (item: \(item.logString))" = "Received \(type.logString) at \(location.logString) (item: \(item.logString))";
"Event tap \"\(eventTap.label)\" timed out (item: \(item.logString))" = "Event tap \"\(eventTap.label)\" timed out (item: \(item.logString))";
"EventTap 1" = "EventTap 1";
"EventTap 2" = "EventTap 2";
"Event tap \"\(eventTap2.label)\" timed out (item: \(item.logString))" = "Event tap \"\(eventTap2.label)\" timed out (item: \(item.logString))";
"Couldn't get menu bar item frame for \(item.logString), so using fixed delay" = "Couldn't get menu bar item frame for \(item.logString), so using fixed delay";
"Menu bar item frame for \(item.logString) has changed to \(NSStringFromRect(currentFrame))" = "Menu bar item frame for \(item.logString) has changed to \(NSStringFromRect(currentFrame))";
"Menu bar item frame check for \(item.logString) was cancelled, so using fixed delay" = "Menu bar item frame check for \(item.logString) was cancelled, so using fixed delay";
"Attempting to wake up \(item.logString)" = "Attempting to wake up \(item.logString)";
"Posting fallback event for moving \(item.logString)" = "Posting fallback event for moving \(item.logString)";
"Failed to post fallback event for moving \(item.logString)" = "Failed to post fallback event for moving \(item.logString)";
"\(item.logString) is already in the correct position" = "\(item.logString) is already in the correct position";
"Moving \(item.logString) to \(destination.logString)" = "Moving \(item.logString) to \(destination.logString)";
"Successfully moved \(item.logString)" = "Successfully moved \(item.logString)";
"Attempt \(n) to move \(item.logString) failed (error: \(error))" = "Attempt \(n) to move \(item.logString) failed (error: \(error))";
"Retrying move of \(item.logString)" = "Retrying move of \(item.logString)";
"Clicking \(item.logString) with \(mouseButton.logString)" = "Clicking \(item.logString) with \(mouseButton.logString)";
"Posting fallback event for clicking \(item.logString)" = "Posting fallback event for clicking \(item.logString)";
"Failed to post fallback event for clicking \(item.logString)" = "Failed to post fallback event for clicking \(item.logString)";
"Running rehide timer for temporarily shown items with interval: \(interval)" = "Running rehide timer for temporarily shown items with interval: \(interval)";
"Rehide timer fired" = "Rehide timer fired";
"ERROR: \(error)" = "ERROR: \(error)";
"No application menu frame, so not showing \(item.logString)" = "No application menu frame, so not showing \(item.logString)";
"Temporarily showing \(item.logString)" = "Temporarily showing \(item.logString)";
"No return destination for \(item.logString)" = "No return destination for \(item.logString)";
"Not enough room to show \"\(item.displayName)\"" = "Not enough room to show \"\(item.displayName)\"";
"Mouse button is down, so waiting to rehide" = "Mouse button is down, so waiting to rehide";
"Menu bar item interface is shown, so waiting to rehide" = "Menu bar item interface is shown, so waiting to rehide";
"Rehiding temporarily shown items" = "Rehiding temporarily shown items";
"Failed to rehide \(item.logString) (error: \(error))" = "Failed to rehide \(item.logString) (error: \(error))";
"Some items failed to rehide" = "Some items failed to rehide";
"Mouse button is down, so will not enforce control item order" = "Mouse button is down, so will not enforce control item order";
"Mouse has recently moved, so will not enforce control item order" = "Mouse has recently moved, so will not enforce control item order";
"Arranging menu bar items" = "Arranging menu bar items";
"null event" = "null event";
"leftMouseDown event" = "leftMouseDown event";
"leftMouseUp event" = "leftMouseUp event";
"rightMouseDown event" = "rightMouseDown event";
"rightMouseUp event" = "rightMouseUp event";
"mouseMoved event" = "mouseMoved event";
"leftMouseDragged event" = "leftMouseDragged event";
"rightMouseDragged event" = "rightMouseDragged event";
"keyDown event" = "keyDown event";
"keyUp event" = "keyUp event";
"flagsChanged event" = "flagsChanged event";
"scrollWheel event" = "scrollWheel event";
"tabletPointer event" = "tabletPointer event";
"tabletProximity event" = "tabletProximity event";
"otherMouseDown event" = "otherMouseDown event";
"otherMouseUp event" = "otherMouseUp event";
"otherMouseDragged event" = "otherMouseDragged event";
"tapDisabledByTimeout event" = "tapDisabledByTimeout event";
"tapDisabledByUserInput event" = "tapDisabledByUserInput event";
"unknown event" = "unknown event";
"left mouse button" = "left mouse button";
"right mouse button" = "right mouse button";
"center mouse button" = "center mouse button";
"unknown mouse button" = "unknown mouse button";
"MenuBarItemManager" = "MenuBarItemManager";
"Special" = "Special";
":" = ":";
"Clock" = "Clock";
"Siri" = "Siri";
"Control Center" = "Control Center";
"AudioVideoModule" = "AudioVideoModule";
"FaceTime" = "FaceTime";
"Shazam" = "Shazam";
"NewItems" = "NewItems";
"Missing namespace component" = "Missing namespace component";
"<null>" = "<null>";
"com.apple.systemuiserver" = "com.apple.systemuiserver";
"Skipping menu bar item image cache as \(reason)" = "Skipping menu bar item image cache as \(reason)";
"Composite image capture failed. Attempting to capturing items individually." = "Composite image capture failed. Attempting to capturing items individually.";
"Update image cache failed for \(section.logString)" = "Update image cache failed for \(section.logString)";
"Ice Bar not visible, app not frontmost" = "Ice Bar not visible, app not frontmost";
"Ice Bar not visible, Settings not visible" = "Ice Bar not visible, Settings not visible";
"Ice Bar not visible, Settings visible but not on Menu Bar Layout" = "Ice Bar not visible, Settings visible but not on Menu Bar Layout";
"MenuBarItemImageCache" = "MenuBarItemImageCache";
"Arrow" = "Arrow";
"Chevron" = "Chevron";
"Door" = "Door";
"Dot" = "Dot";
"Ellipsis" = "Ellipsis";
"Ice Cube" = "Ice Cube";
"Sunglasses" = "Sunglasses";
"Custom" = "Custom";
"DotFill" = "DotFill";
"DotStroke" = "DotStroke";
"arrowshape.left.fill" = "arrowshape.left.fill";
"arrowshape.right.fill" = "arrowshape.right.fill";
"chevron.left" = "chevron.left";
"chevron.right" = "chevron.right";
"door.left.hand.closed" = "door.left.hand.closed";
"door.left.hand.open" = "door.left.hand.open";
"EllipsisFill" = "EllipsisFill";
"EllipsisStroke" = "EllipsisStroke";
"IceCubeStroke" = "IceCubeStroke";
"IceCubeFill" = "IceCubeFill";
"sunglasses.fill" = "sunglasses.fill";
"sunglasses" = "sunglasses";
"SItem" = "SItem";
"HItem" = "HItem";
"AHItem" = "AHItem";
"Search Menu Bar Items" = "Search Menu Bar Items";
"\(section.isHidden ? " = "\(section.isHidden ? ";
" : " = " : ";
") the \(name.displayString) Section" = ") the \(name.displayString) Section";
"q" = "q";
"ControlItem" = "ControlItem";
"⌃" = "⌃";
"⌥" = "⌥";
"⇧" = "⇧";
"⌘" = "⌘";
"Control" = "Control";
"Option" = "Option";
"Shift" = "Shift";
"Command" = "Command";
" + " = " + ";
"\(labelValue) (\(symbolicValue))" = "\(labelValue) (\(symbolicValue))";
"ToggleHiddenSection" = "ToggleHiddenSection";
"ToggleAlwaysHiddenSection" = "ToggleAlwaysHiddenSection";
"SearchMenuBarItems" = "SearchMenuBarItems";
"EnableIceBar" = "EnableIceBar";
"ToggleApplicationMenus" = "ToggleApplicationMenus";
"Space" = "Space";
"⇥" = "⇥";
"⏎" = "⏎";
"⌫" = "⌫";
"⌦" = "⌦";
"F1" = "F1";
"F2" = "F2";
"F3" = "F3";
"F4" = "F4";
"F5" = "F5";
"F6" = "F6";
"F7" = "F7";
"F8" = "F8";
"F9" = "F9";
"F10" = "F10";
"F11" = "F11";
"F12" = "F12";
"F13" = "F13";
"F14" = "F14";
"F15" = "F15";
"F16" = "F16";
"F17" = "F17";
"F18" = "F18";
"F19" = "F19";
"F20" = "F20";
"⇞" = "⇞";
"⇟" = "⇟";
"↖" = "↖";
"↘" = "↘";
"⎋" = "⎋";
"←" = "←";
"→" = "→";
"↓" = "↓";
"↑" = "↑";
"⇪" = "⇪";
"⌧" = "⌧";
"⌤" = "⌤";
"\u{1F50A}" = "\u{1F50A}";
"\u{1F509}" = "\u{1F509}";
"\u{1F507}" = "\u{1F507}";
"0⃣" = "0⃣";
"1⃣" = "1⃣";
"2⃣" = "2⃣";
"3⃣" = "3⃣";
"4⃣" = "4⃣";
"5⃣" = "5⃣";
"6⃣" = "6⃣";
"7⃣" = "7⃣";
"8⃣" = "8⃣";
"9⃣" = "9⃣";
".⃣" = ".⃣";
"/⃣" = "/⃣";
"=⃣" = "=⃣";
"-⃣" = "-⃣";
"*⃣" = "*⃣";
"+⃣" = "+⃣";
"🌐︎︎" = "🌐︎︎";
"?⃝" = "?⃝";
"CopySymbolicHotKeys returned invalid status: \(status)" = "CopySymbolicHotKeys returned invalid status: \(status)";
"Failed to serialize symbolic hotkeys" = "Failed to serialize symbolic hotkeys";
"Expected 2 encoded values, found \(container.count ?? 0)" = "Expected 2 encoded values, found \(container.count ?? 0)";
"KeyCombination" = "KeyCombination";
"Hotkey does not have a valid key combination" = "Hotkey does not have a valid key combination";
"Hotkey event handler installation failed with status \(status)" = "Hotkey event handler installation failed with status \(status)";
"Hotkey already registered for id \(id)" = "Hotkey already registered for id \(id)";
"Hotkey registration failed with status \(status)" = "Hotkey registration failed with status \(status)";
"Hotkey registration failed due to invalid EventHotKeyRef" = "Hotkey registration failed due to invalid EventHotKeyRef";
"No registered key combination for id \(id)" = "No registered key combination for id \(id)";
"Hotkey unregistration failed with status \(status)" = "Hotkey unregistration failed with status \(status)";
"HotkeyRegistry" = "HotkeyRegistry";
"Error invalidating hotkey: Missing AppState" = "Error invalidating hotkey: Missing AppState";
"Hotkey" = "Hotkey";
"Checking for updates is not supported in debug mode." = "Checking for updates is not supported in debug mode.";
"A new update is available" = "A new update is available";
"Version \(update.displayVersionString) is now available" = "Version \(update.displayVersionString) is now available";
"Accessibility" = "Accessibility";
"Get real-time information about the menu bar." = "Get real-time information about the menu bar.";
"Arrange menu bar items." = "Arrange menu bar items.";
"Screen Recording" = "Screen Recording";
"Edit the menu bar's appearance." = "Edit the menu bar's appearance.";
"Display images of individual menu bar items." = "Display images of individual menu bar items.";
"x-apple.systempreferences:com.apple.preference.security?Privacy_ScreenCapture" = "x-apple.systempreferences:com.apple.preference.security?Privacy_ScreenCapture";
"Continue in Limited Mode" = "Continue in Limited Mode";
"Continue" = "Continue";
"Ice needs permission to manage the menu bar." = "Ice needs permission to manage the menu bar.";
"Absolutely no personal information is collected or stored." = "Absolutely no personal information is collected or stored.";
"Quit" = "Quit";
"Ice needs this to:" = "Ice needs this to:";
"•" = "•";
"Ice can work in a limited mode without this permission." = "Ice can work in a limited mode without this permission.";
"checkmark.shield" = "checkmark.shield";
"SettingsWindow" = "SettingsWindow";
"PermissionsWindow" = "PermissionsWindow";
"\(message, privacy: .public)" = "\(message, privacy: .public)";
"NSStatusItem \(rawValue) \(autosaveName)" = "NSStatusItem \(rawValue) \(autosaveName)";
"NSStatusItem Preferred Position autosaveName" = "NSStatusItem Preferred Position autosaveName";
"Preferred Position" = "Preferred Position";
"NSStatusItem Visible autosaveName" = "NSStatusItem Visible autosaveName";
"NSHumanReadableCopyright" = "NSHumanReadableCopyright";
"CFBundleShortVersionString" = "CFBundleShortVersionString";
"CFBundleVersion" = "CFBundleVersion";
"\(rawValue): success" = "\(rawValue): success";
"\(rawValue): failure" = "\(rawValue): failure";
"\(rawValue): illegalArgument" = "\(rawValue): illegalArgument";
"\(rawValue): invalidConnection" = "\(rawValue): invalidConnection";
"\(rawValue): invalidContext" = "\(rawValue): invalidContext";
"\(rawValue): cannotComplete" = "\(rawValue): cannotComplete";
"\(rawValue): notImplemented" = "\(rawValue): notImplemented";
"\(rawValue): rangeCheck" = "\(rawValue): rangeCheck";
"\(rawValue): typeCheck" = "\(rawValue): typeCheck";
"\(rawValue): invalidOperation" = "\(rawValue): invalidOperation";
"\(rawValue): noneAvailable" = "\(rawValue): noneAvailable";
"\(rawValue): unknown" = "\(rawValue): unknown";
"Unknown winding rule \(windingRule)" = "Unknown winding rule \(windingRule)";
"NSScreenNumber" = "NSScreenNumber";
"AppleInterfaceThemeChangedNotification" = "AppleInterfaceThemeChangedNotification";
"Task timed out before completion" = "Task timed out before completion";
"com.apple.dock" = "com.apple.dock";
"Wallpaper" = "Wallpaper";
"Menubar" = "Menubar";
"ShowIceIcon" = "ShowIceIcon";
"IceIcon" = "IceIcon";
"CustomIceIconIsTemplate" = "CustomIceIconIsTemplate";
"UseIceBar" = "UseIceBar";
"ShowOnClick" = "ShowOnClick";
"ShowOnHover" = "ShowOnHover";
"ShowOnScroll" = "ShowOnScroll";
"ItemSpacingOffset" = "ItemSpacingOffset";
"AutoRehide" = "AutoRehide";
"RehideStrategy" = "RehideStrategy";
"RehideInterval" = "RehideInterval";
"Hotkeys" = "Hotkeys";
"EnableAlwaysHiddenSection" = "EnableAlwaysHiddenSection";
"CanToggleAlwaysHiddenSection" = "CanToggleAlwaysHiddenSection";
"ShowOnHoverDelay" = "ShowOnHoverDelay";
"TempShowInterval" = "TempShowInterval";
"ShowAllSectionsOnUserDrag" = "ShowAllSectionsOnUserDrag";
"MenuBarAppearanceConfigurationV2" = "MenuBarAppearanceConfigurationV2";
"IceBarLocation" = "IceBarLocation";
"IceBarPinnedLocation" = "IceBarPinnedLocation";
"hasMigrated0_8_0" = "hasMigrated0_8_0";
"hasMigrated0_10_0" = "hasMigrated0_10_0";
"hasMigrated0_10_1" = "hasMigrated0_10_1";
"hasMigrated0_11_10" = "hasMigrated0_11_10";
"Sections" = "Sections";
"MenuBarHasBorder" = "MenuBarHasBorder";
"MenuBarBorderColor" = "MenuBarBorderColor";
"MenuBarBorderWidth" = "MenuBarBorderWidth";
"MenuBarHasShadow" = "MenuBarHasShadow";
"MenuBarTintKind" = "MenuBarTintKind";
"MenuBarTintColor" = "MenuBarTintColor";
"MenuBarTintGradient" = "MenuBarTintGradient";
"MenuBarShapeKind" = "MenuBarShapeKind";
"MenuBarFullShapeInfo" = "MenuBarFullShapeInfo";
"MenuBarSplitShapeInfo" = "MenuBarSplitShapeInfo";
"MenuBarAppearanceConfiguration" = "MenuBarAppearanceConfiguration";
"Smart" = "Smart";
"Timed" = "Timed";
"Focused app" = "Focused app";
"Window Server" = "Window Server";
"Invalid ICC profile data" = "Invalid ICC profile data";
"Invalid color space or components" = "Invalid color space or components";
"Missing color components" = "Missing color components";
"Missing color space" = "Missing color space";
"Missing ICC profile data" = "Missing ICC profile data";
"dark" = "dark";
"light" = "light";
"aqua" = "aqua";
"Light Appearance" = "Light Appearance";
"Dark Appearance" = "Dark Appearance";
"Migration failed with error: \(error)" = "Migration failed with error: \(error)";
"Successfully migrated to 0.8.0 settings" = "Successfully migrated to 0.8.0 settings";
"name" = "name";
"hotkey" = "hotkey";
"key" = "key";
"modifiers" = "modifiers";
"controlItem" = "controlItem";
"autosaveName" = "autosaveName";
"identifier" = "identifier";
"Successfully migrated to 0.10.0 settings" = "Successfully migrated to 0.10.0 settings";
"Successfully migrated to 0.10.1 settings" = "Successfully migrated to 0.10.1 settings";
"Due to a bug in the 0.10.0 release, the data for Ice's menu bar items was corrupted and their positions had to be reset." = "Due to a bug in the 0.10.0 release, the data for Ice's menu bar items was corrupted and their positions had to be reset.";
"Our sincerest apologies for the inconvenience." = "Our sincerest apologies for the inconvenience.";
"Successfully migrated to 0.11.10 settings" = "Successfully migrated to 0.11.10 settings";
"Invalid menu bar sections JSON object: \(object)" = "Invalid menu bar sections JSON object: \(object)";
"Error migrating hotkeys: \(error)" = "Error migrating hotkeys: \(error)";
"Error migrating control items: \(error)" = "Error migrating control items: \(error)";
"Error migrating menu bar appearance configuration: \(error)" = "Error migrating menu bar appearance configuration: \(error)";
"The following errors occurred: \(errors)" = "The following errors occurred: \(errors)";
"Missing menu bar appearance configuration" = "Missing menu bar appearance configuration";
"Always Hidden" = "Always Hidden";
"Migration" = "Migration";
"CGDisplayHideCursor failed with error \(result.logString)" = "CGDisplayHideCursor failed with error \(result.logString)";
"CGDisplayShowCursor failed with error \(result.logString)" = "CGDisplayShowCursor failed with error \(result.logString)";
"CGWarpMouseCursorPosition failed with error \(result.logString)" = "CGWarpMouseCursorPosition failed with error \(result.logString)";
"MouseCursor" = "MouseCursor";
"CGSSetConnectionProperty failed with error \(result.logString)" = "CGSSetConnectionProperty failed with error \(result.logString)";
"CGSCopyConnectionProperty failed with error \(result.logString)" = "CGSCopyConnectionProperty failed with error \(result.logString)";
"CGSGetScreenRectForWindow failed with error \(result.logString)" = "CGSGetScreenRectForWindow failed with error \(result.logString)";
"CGSGetWindowCount failed with error \(result.logString)" = "CGSGetWindowCount failed with error \(result.logString)";
"CGSGetOnScreenWindowCount failed with error \(result.logString)" = "CGSGetOnScreenWindowCount failed with error \(result.logString)";
"CGSGetWindowList failed with error \(result.logString)" = "CGSGetWindowList failed with error \(result.logString)";
"CGSGetOnScreenWindowList failed with error \(result.logString)" = "CGSGetOnScreenWindowList failed with error \(result.logString)";
"CGSGetProcessMenuBarWindowList failed with error \(result.logString)" = "CGSGetProcessMenuBarWindowList failed with error \(result.logString)";
"CGSCopySpacesForWindows failed" = "CGSCopySpacesForWindows failed";
"CGSCopySpacesForWindows returned array of unexpected type" = "CGSCopySpacesForWindows returned array of unexpected type";
"GetProcessForPID failed with error \(result)" = "GetProcessForPID failed with error \(result)";
"Bridging" = "Bridging";
"CGSMainConnectionID" = "CGSMainConnectionID";
"CGSCopyConnectionProperty" = "CGSCopyConnectionProperty";
"CGSSetConnectionProperty" = "CGSSetConnectionProperty";
"CGSEventIsAppUnresponsive" = "CGSEventIsAppUnresponsive";
"CGSGetActiveSpace" = "CGSGetActiveSpace";
"CGSCopySpacesForWindows" = "CGSCopySpacesForWindows";
"CGSSpaceGetType" = "CGSSpaceGetType";
"CGSGetWindowList" = "CGSGetWindowList";
"CGSGetOnScreenWindowList" = "CGSGetOnScreenWindowList";
"CGSGetProcessMenuBarWindowList" = "CGSGetProcessMenuBarWindowList";
"CGSGetWindowCount" = "CGSGetWindowCount";
"CGSGetOnScreenWindowCount" = "CGSGetOnScreenWindowCount";
"CGSGetScreenRectForWindow" = "CGSGetScreenRectForWindow";
"GetProcessForPID" = "GetProcessForPID";
"EventManager" = "EventManager";
"HID event tap" = "HID event tap";
"session event tap" = "session event tap";
"annotated session event tap" = "annotated session event tap";
"PID \(pid)" = "PID \(pid)";
"Error creating mach port for event tap \"\(self.label)\"" = "Error creating mach port for event tap \"\(self.label)\"";
"Error creating run loop source for event tap \"\(self.label)\"" = "Error creating run loop source for event tap \"\(self.label)\"";
"Missing run loop for event tap \"\(self.label)\"" = "Missing run loop for event tap \"\(self.label)\"";
"Missing run loop source for event tap \"\(self.label)\"" = "Missing run loop source for event tap \"\(self.label)\"";
"Missing mach port for event tap \"\(self.label)\"" = "Missing mach port for event tap \"\(self.label)\"";
"EventTap" = "EventTap";
"XCODE_RUNNING_FOR_PREVIEWS" = "XCODE_RUNNING_FOR_PREVIEWS";
"SetsCursorInBackground" = "SetsCursorInBackground";
"No settings window!" = "No settings window!";
"Multiple attempts made to assign app delegate" = "Multiple attempts made to assign app delegate";
"Window \(window.identifier?.rawValue ?? " = "Window \(window.identifier?.rawValue ?? ";
") is not the settings window!" = ") is not the settings window!";
") is not the permissions window!" = ") is not the permissions window!";
"First time activating app, so going through Dock" = "First time activating app, so going through Dock";
"AppState" = "AppState";
"Missing app state in applicationWillFinishLaunching" = "Missing app state in applicationWillFinishLaunching";
"Missing app state in applicationDidFinishLaunching" = "Missing app state in applicationDidFinishLaunching";
"Multiple attempts made to assign app state" = "Multiple attempts made to assign app state";
"Failed to open settings window" = "Failed to open settings window";
"AppDelegate" = "AppDelegate";
"General" = "General";
"Menu Bar Layout" = "Menu Bar Layout";
"Advanced" = "Advanced";
"Updates" = "Updates";
"About" = "About";
"UpdateCheck" = "UpdateCheck";
"Failed to request authorization for notifications: \(error)" = "Failed to request authorization for notifications: \(error)";
"UserNotifications" = "UserNotifications";
